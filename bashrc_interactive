# Initialization for interactive shells

umask 002

. ~/dotfiles/bash_aliases

shopt -s cdspell checkhash checkwinsize cmdhist extglob histappend hostcomplete interactive_comments

# Colors
# https://github.com/sapegin/dotfiles/blob/bash/tilde/bash_profile.bash
RED="$(tput setaf 1)"
GREEN="$(tput setaf 2)"
YELLOW="$(tput setaf 3)"
BLUE="$(tput setaf 4)"
MAGENTA="$(tput setaf 5)"
CYAN="$(tput setaf 6)"
WHITE="$(tput setaf 7)"
GRAY="$(tput setaf 8)"
BOLD="$(tput bold)"
UNDERLINE="$(tput sgr 0 1)"
INVERT="$(tput sgr 1 0)"
NOCOLOR="$(tput sgr0)"

# Must set this for every shell invocation, not just once in the environment.
# Exit code stuff must be first, but Apple Terminal sticks something in front.
# Adapted from https://github.com/jimeh/git-aware-prompt/blob/master/prompt.sh
# and https://github.com/sapegin/dotfiles/blob/bash/includes/bash_prompt.bash
prompt_command() {
    # Exit code
    local EXIT="$?"
    local exit_prompt=
    if [ ${EXIT} != 0 ]; then
        exit_prompt="${RED}(${EXIT})${NOCOLOR} "
    fi

    # Maybe newline
    ( IFS=';' read -sdR -p $'\E[6n' ROW COL;
    (("${COL#*[}" > 1 )) && echo $(tput smso)%$(tput rmso); )

    # Git
    # Based on: http://stackoverflow.com/a/13003854/170413
    local git_info=
    local branch
    if branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null); then
        if [[ "$branch" == "HEAD" ]]; then
            branch="${RED}detached"'*'"${NOCOLOR}"
        fi

        local status=$(git status --porcelain 2> /dev/null)
        if [[ "$status" != "" ]]; then
            git_info="${YELLOW}($branch*)${NOCOLOR} "
        else
            git_info="${GREEN}($branch)${NOCOLOR} "
        fi
    fi

    # Virtualenv
    local venv_prompt=
    if [ -n "$VIRTUAL_ENV" ]; then
        venv_prompt="${BLUE}$(basename ${VIRTUAL_ENV})${NOCOLOR} "
    fi

    # Local? SSH?
    local remote=
    [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ] && remote=1

    # Hostname
    local myhost="${HOSTNAME%%.*}"
    [[ $myhost = ark3-workstation* ]] && myhost="GKE"
    local host_prompt=
    if [ -n "$remote" ]; then
        host_prompt="${BOLD}${MAGENTA}[${myhost}]${NOCOLOR} "
    fi
    if [[ $TERM = screen* ]] || [ -n "$STY" ] || [ -n "$TMUX" ]; then
        printf "\033k${myhost}\033\\"
    fi

    history -a
    local time_prompt="$INVERT$BOLD$GREEN \A $NOCOLOR "
    local dir_prompt="\w"

    PS1="${time_prompt}$host_prompt$venv_prompt$git_info$exit_prompt${dir_prompt}\n\[${GREEN}\]$ \[${NOCOLOR}\]"
    PS2='\[${GREEN}\]> \[${NOCOLOR}\]'  # Prompt for subsequent lines
    PS4='\[${GREEN}\]+ \[${NOCOLOR}\]'  # Prefix for "set -x"
}

export PROMPT_COMMAND=prompt_command

[ -f /etc/bash_completion ] && . /etc/bash_completion
[ -f /usr/local/etc/bash_completion ] && . /usr/local/etc/bash_completion
[ -f /usr/local/share/bash-completion/bash_completion ] && . /usr/local/share/bash-completion/bash_completion
command -v kubectl >/dev/null 2>&1 && source <(kubectl completion bash)
command -v minikube >/dev/null 2>&1 && source <(minikube completion bash)

if [ -f '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.bash.inc' ]; then
    source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.bash.inc'
    source '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.bash.inc'
fi
# added by travis gem
[ -f /Users/ark3/.travis/travis.sh ] && source /Users/ark3/.travis/travis.sh

export PATH=$(awk -F: '{for(i=1;i<=NF;i++){if(!a[$i]++)printf s$i;s=":"}}' <<< $PATH)  # Eliminate dups
export PATH=$(sed -e s/:\.:/:/g -e s/^\.:// -e s/:\.$// <<< $PATH)  # So . is not in my path
