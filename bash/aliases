#!/hint/bash

# Aliases and functions

case "$(uname -s)" in
    Darwin)
    alias ls='ls -sFG'
    ;;

    Linux)
    alias ls='ls -sF --color'
    ;;

    *)
    alias ls='ls -sF'
esac

# Enable aliases to be sudoâ€™ed
# https://askubuntu.com/questions/22037/aliases-not-available-when-using-sudo/22043#22043
alias sudo='sudo '

alias c='cat'
#alias m='less'
alias m="bat -p"
alias where='type -a'
alias cb='find . \( -type d -name .git -o -name node_modules \) -prune -o  -type f \( -name "*.pyc" -o -name "*.pyo" -o -name "*~" -o -name ".*~" -o -name ".#*" -o -name "*.class" -o -name "*.qc" -o -name "*.qp" \) -delete'

alias d='dirs +1 >&/dev/null && dirs -v || dirs'
alias md='mkdir'
alias rd='rmdir'
alias pd='pushd'
alias od='popd'

alias du='du -h'
alias df='df -h'
alias diff2diff='fgrep " differ" | sed -e "s/Files/diff -u/" -e "s/and //" -e "s/ differ//"'
alias em='emacsclient -q -n'
alias gdiff='git diff --no-index'
alias myip='dig +short myip.opendns.com @resolver1.opendns.com'
alias py='python3'
alias k='kubectl'

alias l='ls'
alias la='ls -a'
alias ll='ls -l'
alias lla='ls -la'
alias ltr='ls -ltr'

alias ga='git add'
alias gb='git branch'
alias gc='git commit'
alias gco='git checkout'
alias gd='git diff'
alias gdt='git difftool'
alias gl='git log --pretty="format:%C(auto)%h %s %C(blue)%aN %C(reset)(%cr) %C(auto)%d"'
alias gll='git log --stat'
alias gp='git pull --ff-only'
alias gs='git status -sb'
alias gss='git status'
#alias gl='git log --pretty="format:%h %aN %ad %s" --date=short'
# See also git help shortlog for .mailmap stuff

# macOS has no md5sum or sha1sum; use fallbacks
command -v md5sum > /dev/null || alias md5sum="md5"
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# clear screen w/o losing existing output; just scroll it off the top
printf -v MANYRETS \\n%.0s {1..500}           # this _creates_ MANYRETS
function myclear {
    printf "${MANYRETS:0:$(tput lines) - 1}"  # this _uses_ MANYRETS
    clear
}
bind -x '"\C-l": myclear'

function mcd {
    mkdir -p -- "$1" &&
    cd -P -- "$1"
}

function ff {
    find . \( -type f -o -type d \) -name "$1" -print
}

function ff0 {
    find . \( -type f -o -type d \) -name "$1" -print0
}

function fff {
    if [ x"$1" == x ]
    then find . -type f -print
    else find "$1" -type f -print
    fi
}
